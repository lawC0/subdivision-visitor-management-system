package pack1;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Lawrence C. Velasco
 */
public class visitorLogReport_Panel extends javax.swing.JPanel {

    public visitorLogReport_Panel() {
        initComponents();
        VLRtableDesign();
        VLRTableColumnSize();
        viewVLRTable("select * from VLR_StandardView order by VisitID DESC");
        //calls table generating method to immediately display table
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VLR_Title = new javax.swing.JLabel();
        VLR_Description = new javax.swing.JLabel();
        VLR_ClearSearch = new java.awt.Button();
        VLR_SearchField = new java.awt.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        VLR_Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        VLR_TableModes = new javax.swing.JComboBox<>();
        VLRRefreshButton = new javax.swing.JButton();
        VLRTablePrint = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        VLR_Title.setFont(new java.awt.Font("Calibri", 1, 50)); // NOI18N
        VLR_Title.setForeground(new java.awt.Color(30, 30, 30));
        VLR_Title.setText("Visitor Log Report");

        VLR_Description.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        VLR_Description.setForeground(new java.awt.Color(133, 133, 133));
        VLR_Description.setText("Report of every entry and exit of visitors within the subdivision.");

        VLR_ClearSearch.setBackground(new java.awt.Color(217, 217, 217));
        VLR_ClearSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        VLR_ClearSearch.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        VLR_ClearSearch.setForeground(new java.awt.Color(133, 133, 133));
        VLR_ClearSearch.setLabel("Clear");
        VLR_ClearSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLR_ClearSearchActionPerformed(evt);
            }
        });

        VLR_SearchField.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        VLR_SearchField.setForeground(new java.awt.Color(30, 30, 30));
        VLR_SearchField.setPreferredSize(new java.awt.Dimension(56, 30));
        VLR_SearchField.setText("Search...");
        VLR_SearchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VLR_SearchFieldMouseClicked(evt);
            }
        });
        VLR_SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLR_SearchFieldActionPerformed(evt);
            }
        });
        VLR_SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VLR_SearchFieldKeyReleased(evt);
            }
        });

        VLR_Table.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        VLR_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "VisitID", "Date -Time In", "Date - Time Out", "VisitorID", "Visitor Name", "Visiting Address (Block - Lot - Phase)", "Location Type", "SecurityID", "Security Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        VLR_Table.setFocusCycleRoot(true);
        VLR_Table.setFocusable(false);
        VLR_Table.setGridColor(new java.awt.Color(255, 255, 255));
        VLR_Table.setRowHeight(25);
        VLR_Table.setSelectionBackground(new java.awt.Color(46, 110, 76));
        VLR_Table.setSelectionForeground(new java.awt.Color(255, 255, 255));
        VLR_Table.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(VLR_Table);
        if (VLR_Table.getColumnModel().getColumnCount() > 0) {
            VLR_Table.getColumnModel().getColumn(0).setResizable(false);
            VLR_Table.getColumnModel().getColumn(1).setResizable(false);
            VLR_Table.getColumnModel().getColumn(2).setResizable(false);
            VLR_Table.getColumnModel().getColumn(3).setResizable(false);
            VLR_Table.getColumnModel().getColumn(4).setResizable(false);
            VLR_Table.getColumnModel().getColumn(5).setResizable(false);
            VLR_Table.getColumnModel().getColumn(6).setResizable(false);
        }

        VLR_TableModes.setBackground(new java.awt.Color(217, 217, 217));
        VLR_TableModes.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        VLR_TableModes.setForeground(new java.awt.Color(133, 133, 133));
        VLR_TableModes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Location Type", "All", "Residence", "Facilities", "Open Lot" }));
        VLR_TableModes.setToolTipText("");
        VLR_TableModes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLR_TableModesActionPerformed(evt);
            }
        });

        VLRRefreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/refresh.png"))); // NOI18N
        VLRRefreshButton.setText("Refresh");
        VLRRefreshButton.setContentAreaFilled(false);
        VLRRefreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        VLRRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLRRefreshButtonActionPerformed(evt);
            }
        });

        VLRTablePrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/printer.png"))); // NOI18N
        VLRTablePrint.setText("Print");
        VLRTablePrint.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        VLRTablePrint.setBorderPainted(false);
        VLRTablePrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        VLRTablePrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VLRTablePrintMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VLRTablePrintMouseExited(evt);
            }
        });
        VLRTablePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLRTablePrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VLR_SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(VLR_ClearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 769, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(VLRRefreshButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(VLR_TableModes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(VLR_Description)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(VLR_Title))
                            .addComponent(VLRTablePrint, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VLR_Title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(VLR_Description)
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(VLR_ClearSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VLR_SearchField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VLR_TableModes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VLRRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(VLRTablePrint, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void VLR_SearchFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VLR_SearchFieldMouseClicked
        VLR_SearchField.setText("");
    }//GEN-LAST:event_VLR_SearchFieldMouseClicked

    private void VLR_SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VLR_SearchFieldKeyReleased
        //live filtering of table based on user input in the searchbox
        DefaultTableModel VLRModelSearch = (DefaultTableModel) VLR_Table.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(VLRModelSearch);
        VLR_Table.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(VLR_SearchField.getText()));
    }//GEN-LAST:event_VLR_SearchFieldKeyReleased

    private void VLR_ClearSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLR_ClearSearchActionPerformed
        //clears search box
        VLR_SearchField.setText("");
        DefaultTableModel VLRModelSearch = (DefaultTableModel) VLR_Table.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(VLRModelSearch);
        VLR_Table.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(VLR_SearchField.getText()));
        VLR_SearchField.setText("Search...");
    }//GEN-LAST:event_VLR_ClearSearchActionPerformed

    private void VLR_TableModesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLR_TableModesActionPerformed
        //calls table generating method based on the modes

        int choice = VLR_TableModes.getSelectedIndex();

        if (choice == 1) {
            viewVLRTable("select * from VLR_StandardView order by VisitID DESC");
        } else if (choice == 2) {
            viewVLRTable("select * from VLR_withResidentView order by VisitID DESC");
        } else if (choice == 3) {
            viewVLRTable("select * from VLR_withFacilityView order by VisitID DESC");
        } else if (choice == 4) {
            viewVLRTable("select * from VLR_StandardView where LocationType = 'O' order by VisitID DESC");
        }
    }//GEN-LAST:event_VLR_TableModesActionPerformed

    private void VLRRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLRRefreshButtonActionPerformed
        //Used to refresh the table as it cannot perform refreshing 
        //automatically once a new log has been reported

        viewVLRTable("select * from VLR_StandardView order by VisitID");
        viewVLRTable("select * from VLR_StandardView order by VisitID DESC");
    }//GEN-LAST:event_VLRRefreshButtonActionPerformed

    private void VLRTablePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLRTablePrintActionPerformed
        int choice = VLR_TableModes.getSelectedIndex();
        LocalDateTime thisDate = LocalDateTime.now();
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        String newDate = thisDate.format(dateFormat);
        MessageFormat header = new MessageFormat("");
        if ("Search...".matches(VLR_SearchField.getText()) || VLR_SearchField.getText().isBlank()) {
            switch (choice) {
                case 0 ->
                    JOptionPane.showMessageDialog(null, "Please Select LocationType to Print Report", "Print Failed", JOptionPane.ERROR_MESSAGE);
                case 1 ->
                    header = new MessageFormat("Complete Visitor Log Report");
                case 2 -> 
                        header = new MessageFormat("Residence Visit Log Report");
                case 3 ->
                    header = new MessageFormat("Facilities Visit Log Report");
                case 4 ->
                    header = new MessageFormat("Open Lot Visit Log Report");
            }
        } else if ("--".matches(VLR_SearchField.getText())) {
            header = new MessageFormat("Currently Staying Visitor Log Report");
        } else if (VLR_SearchField.getText().startsWith("BL")) {
            if(choice==2){
                header = new MessageFormat("Specific Residence Address Log Report");
            }else{
                header = new MessageFormat("Specific Address Log Report");
            }
        }else{
            if(choice==2){
                header = new MessageFormat("Specific Resident Log Report");
            }else{
            header = new MessageFormat("Specific Person Log Report");
            }
        }
        MessageFormat footer = new MessageFormat("Benilde Subdivision Visitor Management System ("+newDate+")");
        if (choice != 0) {
            try {
                PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
                set.add(OrientationRequested.LANDSCAPE);
                VLR_Table.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, set, true);
                JOptionPane.showMessageDialog(null, "Printed Successfully", "Message", JOptionPane.INFORMATION_MESSAGE);
            } catch (java.awt.print.PrinterException e) {
                JOptionPane.showMessageDialog(null, "Print Failed", "Message", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_VLRTablePrintActionPerformed

    private void VLRTablePrintMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VLRTablePrintMouseEntered
        VLRTablePrint.setForeground(new java.awt.Color(46, 110, 76));
        VLRTablePrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/printerHover.png"))); // NOI18N
    }//GEN-LAST:event_VLRTablePrintMouseEntered

    private void VLRTablePrintMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VLRTablePrintMouseExited
        VLRTablePrint.setForeground(new java.awt.Color(31, 31, 31));
        VLRTablePrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/printer.png"))); // NOI18N
    }//GEN-LAST:event_VLRTablePrintMouseExited

    private void VLR_SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLR_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VLR_SearchFieldActionPerformed
    public void VLRtableDesign() { // Formats color and font of table used in visitor log report
        DefaultTableCellRenderer head_render = new DefaultTableCellRenderer();
        head_render.setBackground(new Color(30, 30, 30));
        head_render.setForeground(Color.white);
        head_render.setFont(new Font("Calibri", Font.BOLD, 18));
        VLR_Table.getTableHeader().setDefaultRenderer(head_render);
    }

    public void VLRTableColumnSize() { // Formats length of column size
        TableColumnModel columnModel = VLR_Table.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(1);
        columnModel.getColumn(1).setPreferredWidth(50);
        columnModel.getColumn(2).setPreferredWidth(50);
        columnModel.getColumn(3).setPreferredWidth(1);
        columnModel.getColumn(4).setPreferredWidth(50);
        columnModel.getColumn(5).setPreferredWidth(150);
        columnModel.getColumn(6).setPreferredWidth(10);
        columnModel.getColumn(7).setPreferredWidth(1);
    }

    public void viewVLRTable(String query) {
        try {
            String hostname = "localhost";
            String sqlInstanceName = "NETBEANSCONNECT"; //computer name                                                                 //DITO
            String sqlDatabase = "VisitorMS";  //sql server database name
            String sqlUser = "sa";
            String sqlPassword = "BSIT2AG1"; //passwrod sa account

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            String connectURL = "jdbc:sqlserver://" + hostname + ":1433"
                    + ";instance=" + sqlInstanceName + ";databaseName=" + sqlDatabase
                    + ";encrypt=true;trustServerCertificate=true";

            Connection con = DriverManager.getConnection(connectURL, sqlUser, sqlPassword);
            System.out.println("Connect to database successful [VisitorLogReportPanel]!!");

            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery(query);

            DefaultTableModel VLRTableModel = (DefaultTableModel) VLR_Table.getModel();
            VLRTableModel.setRowCount(0);

            while (rs.next()) {
                String visitID = String.valueOf(rs.getInt("VisitID"));
                String timein = String.valueOf(rs.getTimestamp("VisitDateTimeIn"));
                String timeout = String.valueOf(rs.getTimestamp("VisitDateTimeOut"));
                if (timeout.equals("null")) {
                    timeout = "--";
                }
                String visitorID = String.valueOf(rs.getInt("VisitorID"));
                String visitorName = rs.getString("VisitorName");
                String address = rs.getString("Address");
                String locType;
                if (rs.getString("LocationType").equals("R")) {
                    locType = "Residence";
                } else if (rs.getString("LocationType").equals("F")) {
                    locType = "Facilities";
                } else {
                    locType = "Open Lot";
                }
                String StaffID = String.valueOf(rs.getInt("StaffID"));
                String SecName = rs.getString("SecurityName");

                String VLRData[] = {visitID, timein, timeout, visitorID, visitorName, address, locType, StaffID, SecName};

                VLRTableModel.addRow(VLRData);
            }
            rs.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MenuFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton VLRRefreshButton;
    private javax.swing.JButton VLRTablePrint;
    private java.awt.Button VLR_ClearSearch;
    private javax.swing.JLabel VLR_Description;
    private java.awt.TextField VLR_SearchField;
    private javax.swing.JTable VLR_Table;
    private javax.swing.JComboBox<String> VLR_TableModes;
    private javax.swing.JLabel VLR_Title;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
