/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pack1;

import Vehicle.*;
import Objects.*;
import java.sql.*;
import java.util.Vector;
import javax.swing.*;
import javax.swing.table.*;


/**
 *
 * @author Paulex Sandoval
 */
public class VisitorPanel extends javax.swing.JPanel {

    Visitor vs; //Add visitor object
    Log log; //Add log object
    int vsNew; //VisitorConditions
    int SecID; //Copies Security ID

    /**
     * Creates new form VisitorPanel
     */
    public VisitorPanel() {
        initComponents();
        vs = new Visitor();
        log = new Log();
        
        TableActionEventDelete event = new TableActionEventDelete() {

            @Override //Delete Visitor Vehicle on Vehicle Table
            public void onDelete(int row) {
                vsNew = JOptionPane.showOptionDialog(null, "Do you wish to delete the vehicle?", "Delete Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
                // = 0 means to proceed deletion, = 1 or -1, Cancel Deletion
                if (vsNew == 0) { 
                    String plate = VehicleTable.getModel().getValueAt(row, 0).toString();
                    String deleteQuery = "delete from vehicle where plateNumber = ?"; //Delete Statemet for Vehicle
                    try { //Open Database
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                        Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost\\NETBEANSCONNECT:1433;databaseName=VisitorMS;encrypt=true;trustServerCertificate=true", "sa", "BSIT2AG1");
                        PreparedStatement pst = conn.prepareStatement(deleteQuery);
                        pst.setString(1, plate);
                        pst.executeQuery();
                        conn.close(); //Closing Connection to Database
                    } catch (ClassNotFoundException | SQLException e) {
                    }
                    showVehicleTable(); //reloads VehicleTable
                }
            }
        };
        VehicleTable.getColumnModel().getColumn(3).setCellRenderer(new TableActionCellRenderDelete());
        VehicleTable.getColumnModel().getColumn(3).setCellEditor(new TableActionCellEditorDelete(event));
    }

    public void setSecID(int SecID) { //Settter method for SecurityID
        this.SecID = SecID;
        System.out.println(this.SecID);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void resetVisitorInfo() { //Reseting Visitor Text Feilds
        VisitorIDField2.setText("");
        LNameField2.setText("");
        FNameField2.setText("");
        MNameField2.setText("");
        SuffixField2.setText("");
        HNumField2.setText("");
        StreetField2.setText("");
        BarangayField2.setText("");
        MunicipalityField2.setText("");
        ProvinceField2.setText("");
        ZipField2.setText("");
        SexCombo2.setSelectedIndex(-1);
        StatusCombo2.setSelectedIndex(-1);
    }

    public void getVisitorInfo() { //using Visitor Object and it's getter method to retrieve each Attribute
        VisitorIDField2.setText(Integer.toString(vs.getID()));
        LNameField2.setText(vs.getlName());
        FNameField2.setText(vs.getfName());
        MNameField2.setText(vs.getmName());
        SuffixField2.setText(vs.getSuffix());
        HNumField2.setText(vs.getHouseNum());
        StreetField2.setText(vs.getStreet());
        BarangayField2.setText(vs.getBarangay());
        MunicipalityField2.setText(vs.getMunicipality());
        ProvinceField2.setText(vs.getProvince());
        ZipField2.setText(Integer.toString(vs.getZipCode()));
        if (vs.getSex() == null) {
            SexCombo2.setSelectedIndex(-1);
        } else if (vs.getSex().matches("M")) {
            SexCombo2.setSelectedIndex(0);
        } else if (vs.getSex().matches("F")) {
            SexCombo2.setSelectedIndex(1);
        }
        if (vs.getStatus().matches("Allowed")) {
            StatusCombo2.setSelectedIndex(0);
        } else {
            StatusCombo2.setSelectedIndex(1);
        }
    }

    public void getLogInfo() { //Use getter from Log Class to transfer text to Label
        DateInLabel3.setText("");
        DateOutLabel3.setText("");
        TimeInLabel3.setText("");
        TimeOutLabel3.setText("");
        try {
            if (!log.getDatetimeIn().isEmpty()) {
                DateInLabel3.setText(log.getDatetimeIn().substring(0, 10));
                TimeInLabel3.setText(log.getDatetimeIn().substring(11, 19));
            }
        } catch (NullPointerException e) {
        }
        try {
            if (!log.getDatetimeOut().isEmpty()) {
                DateOutLabel3.setText(log.getDatetimeOut().substring(0, 10));
                TimeOutLabel3.setText(log.getDatetimeOut().substring(11, 19));
            }
        } catch (NullPointerException e) {
        }
    }

    public void showVehicleTable() { //gets all vehicles registered to a visitor and puts it in a table
        VehicleScrollPane.setVisible(true);
        String SqlQuery = "select * from VEHICLE where VisitorID = '" + vs.getID() + "'";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost\\NETBEANSCONNECT:1433;databaseName=VisitorMS;encrypt=true;trustServerCertificate=true", "sa", "BSIT2AG1");
            PreparedStatement pst = conn.prepareStatement(SqlQuery);
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rsms = rs.getMetaData();
            int num = rsms.getColumnCount();
            DefaultTableModel vehicleTable = (DefaultTableModel) VehicleTable.getModel();
            vehicleTable.setRowCount(0);
            while (rs.next()) {
                Vector rowData = new Vector();
                for (int i = 1; i < num; i++) {
                    rowData.add(rs.getString(1));
                    rowData.add(rs.getString(2));
                    rowData.add(rs.getString(3));
                }
                vehicleTable.addRow(rowData);
            }
        } catch (ClassNotFoundException | SQLException e) {
        }
    }

    public void editInfo(JTextField[] vsInf, boolean state) { //Switch for TextFields to setEditable to TRUE or FALSE
        for (JTextField jTF : vsInf) {
            if (state) {
                jTF.setEnabled(true);
                jTF.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.LOWERED));
            } else {
                jTF.setEnabled(false);
                jTF.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
            }
        }
    }

    public void editInfo(JComboBox[] vsBox, boolean state) { //Switch for ComboBox to setEditable to TRUE or FALSE
        for (JComboBox jCB : vsBox) {
            if (state) {
                jCB.setEnabled(true);
                jCB.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.LOWERED));
            } else {
                jCB.setEnabled(false);
                jCB.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
            }
        }
    }

    public void refreshLogs() { //Refreshes Log Panel with 3 methods
        DateTimePanel.setVisible(true);
        log.setInfo(vs.getID()); //gets the most recent Log based on the matching VisitorID to Object Log
        log.display(); //Checker for Listing of Attributes in Console
        getLogInfo(); //gets attributes from log Object via getter method
    }
    
    public boolean isPanelvisible(){
        return EditVisitorButton.isVisible();
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VNameLabel = new javax.swing.JLabel();
        LNameLabel = new javax.swing.JLabel();
        LNameField = new javax.swing.JTextField();
        FNameLabel = new javax.swing.JLabel();
        FNameField = new javax.swing.JTextField();
        MNameLabel = new javax.swing.JLabel();
        MNameField = new javax.swing.JTextField();
        SNameLabel = new javax.swing.JLabel();
        SNameField = new javax.swing.JTextField();
        VisitorNameEnter = new javax.swing.JButton();
        VisitorInfoScrollPane = new javax.swing.JScrollPane();
        VisitorInfoPanelFixed = new javax.swing.JPanel();
        VisitorIDLabel1 = new javax.swing.JLabel();
        FullNameLabel = new javax.swing.JLabel();
        LNameLabel1 = new javax.swing.JLabel();
        FNameLabel1 = new javax.swing.JLabel();
        MNameLabel1 = new javax.swing.JLabel();
        SuffixLabel1 = new javax.swing.JLabel();
        SexLabel1 = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        HNumLabel1 = new javax.swing.JLabel();
        StreetLabel1 = new javax.swing.JLabel();
        BarangayLabel1 = new javax.swing.JLabel();
        MunicipalityLabel1 = new javax.swing.JLabel();
        ProvinceLabel1 = new javax.swing.JLabel();
        ZipLabel1 = new javax.swing.JLabel();
        StatusLabel1 = new javax.swing.JLabel();
        VehicleLabel = new javax.swing.JLabel();
        VehicleScrollPane = new javax.swing.JScrollPane();
        VehicleTable = new javax.swing.JTable();
        LNameField2 = new javax.swing.JTextField();
        FNameField2 = new javax.swing.JTextField();
        MNameField2 = new javax.swing.JTextField();
        SuffixField2 = new javax.swing.JTextField();
        HNumField2 = new javax.swing.JTextField();
        StreetField2 = new javax.swing.JTextField();
        BarangayField2 = new javax.swing.JTextField();
        MunicipalityField2 = new javax.swing.JTextField();
        ProvinceField2 = new javax.swing.JTextField();
        ZipField2 = new javax.swing.JTextField();
        VisitorIDField2 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        SexCombo2 = new javax.swing.JComboBox<>();
        StatusCombo2 = new javax.swing.JComboBox<>();
        NewVisitorButton = new javax.swing.JButton();
        NewVehicleButton = new javax.swing.JButton();
        NewLogButton = new javax.swing.JButton();
        DateTimePanel = new javax.swing.JPanel();
        DateTimeInLabel2 = new javax.swing.JLabel();
        DateTimeOutLabel2 = new javax.swing.JLabel();
        DateInLabel3 = new javax.swing.JLabel();
        DateOutLabel3 = new javax.swing.JLabel();
        TimeInLabel3 = new javax.swing.JLabel();
        TimeOutLabel3 = new javax.swing.JLabel();
        addBL = new javax.swing.JLabel();
        EditVisitorButton = new pack1.ActionButtonAddBL();
        CancelEditButton = new pack1.ActionButtonAddBL();
        ConfirmEditButton = new pack1.ActionButtonAddBL();

        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        VNameLabel.setFont(new java.awt.Font("Calibri", 1, 50)); // NOI18N
        VNameLabel.setForeground(new java.awt.Color(30, 30, 30));
        VNameLabel.setText("Visitor");

        LNameLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        LNameLabel.setForeground(new java.awt.Color(43, 34, 34));
        LNameLabel.setText("Last Name");

        LNameField.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        LNameField.setToolTipText("Required Field");
        LNameField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        LNameField.setPreferredSize(new java.awt.Dimension(450, 36));
        LNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LNameFieldActionPerformed(evt);
            }
        });

        FNameLabel.setFont(LNameLabel.getFont());
        FNameLabel.setForeground(LNameLabel.getForeground());
        FNameLabel.setText("First Name");

        FNameField.setFont(LNameField.getFont());
        FNameField.setForeground(LNameField.getForeground());
        FNameField.setToolTipText("Required Field");
        FNameField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        FNameField.setPreferredSize(new java.awt.Dimension(450, 36));
        FNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FNameFieldActionPerformed(evt);
            }
        });

        MNameLabel.setFont(LNameLabel.getFont());
        MNameLabel.setForeground(LNameLabel.getForeground());
        MNameLabel.setText("Middle Name");

        MNameField.setFont(LNameField.getFont());
        MNameField.setForeground(LNameField.getForeground());
        MNameField.setToolTipText("Optional Field");
        MNameField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        MNameField.setPreferredSize(new java.awt.Dimension(450, 36));
        MNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MNameFieldActionPerformed(evt);
            }
        });

        SNameLabel.setFont(LNameLabel.getFont());
        SNameLabel.setForeground(LNameLabel.getForeground());
        SNameLabel.setText("Suffix");

        SNameField.setFont(LNameField.getFont());
        SNameField.setForeground(LNameField.getForeground());
        SNameField.setToolTipText("Optional Field");
        SNameField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        SNameField.setPreferredSize(new java.awt.Dimension(450, 36));
        SNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNameFieldActionPerformed(evt);
            }
        });

        VisitorNameEnter.setBackground(new java.awt.Color(46, 110, 76));
        VisitorNameEnter.setFont(LNameLabel.getFont());
        VisitorNameEnter.setForeground(new java.awt.Color(255, 255, 255));
        VisitorNameEnter.setText("Enter");
        VisitorNameEnter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        VisitorNameEnter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        VisitorNameEnter.setPreferredSize(new java.awt.Dimension(450, 25));
        VisitorNameEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisitorNameEnterActionPerformed(evt);
            }
        });

        VisitorInfoScrollPane.setVisible(false);
        VisitorInfoScrollPane.setBorder(null);
        VisitorInfoScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        VisitorInfoScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        VisitorInfoScrollPane.setHorizontalScrollBar(null);
        VisitorInfoScrollPane.setViewportView(null);

        VisitorInfoPanelFixed.setBackground(new java.awt.Color(255, 255, 255));

        VisitorIDLabel1.setFont(FullNameLabel.getFont());
        VisitorIDLabel1.setForeground(LNameLabel.getForeground());
        VisitorIDLabel1.setText("Visitor ID");

        FullNameLabel.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        FullNameLabel.setForeground(LNameLabel.getForeground());
        FullNameLabel.setText("Full Name");

        LNameLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        LNameLabel1.setForeground(LNameLabel.getForeground());
        LNameLabel1.setText("Last Name");

        FNameLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        FNameLabel1.setForeground(LNameLabel.getForeground());
        FNameLabel1.setText("First Name");

        MNameLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        MNameLabel1.setForeground(LNameLabel.getForeground());
        MNameLabel1.setText("Middle Name");

        SuffixLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        SuffixLabel1.setForeground(LNameLabel.getForeground());
        SuffixLabel1.setText("Suffix");

        SexLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        SexLabel1.setForeground(LNameLabel.getForeground());
        SexLabel1.setText("Sex");

        AddressLabel.setFont(FullNameLabel.getFont());
        AddressLabel.setForeground(LNameLabel.getForeground());
        AddressLabel.setText("Address");

        HNumLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        HNumLabel1.setForeground(LNameLabel.getForeground());
        HNumLabel1.setText("House Number");

        StreetLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        StreetLabel1.setForeground(LNameLabel.getForeground());
        StreetLabel1.setText("Street");

        BarangayLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        BarangayLabel1.setForeground(LNameLabel.getForeground());
        BarangayLabel1.setText("Barangay");

        MunicipalityLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        MunicipalityLabel1.setForeground(LNameLabel.getForeground());
        MunicipalityLabel1.setText("Municipality");

        ProvinceLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        ProvinceLabel1.setForeground(LNameLabel.getForeground());
        ProvinceLabel1.setText("Province");

        ZipLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        ZipLabel1.setForeground(LNameLabel.getForeground());
        ZipLabel1.setText("Zip Code");

        StatusLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        StatusLabel1.setForeground(LNameLabel.getForeground());
        StatusLabel1.setText("Visitor Status");

        VehicleLabel.setFont(FullNameLabel.getFont());
        VehicleLabel.setForeground(LNameLabel.getForeground());
        VehicleLabel.setText("Vechicle");

        VehicleScrollPane.setVisible(false);

        VehicleTable.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        VehicleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plate Number", "Vehicle Type", "Vehicle Model", "Actions"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        VehicleTable.setFocusCycleRoot(true);
        VehicleTable.setFocusable(false);
        VehicleTable.setGridColor(new java.awt.Color(255, 255, 255));
        VehicleTable.setRowHeight(50);
        VehicleTable.setSelectionBackground(new java.awt.Color(46, 110, 76));
        VehicleTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        VehicleTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        VehicleTable.getTableHeader().setReorderingAllowed(false);
        VehicleScrollPane.setViewportView(VehicleTable);

        LNameField2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        LNameField2.setEnabled(false);
        LNameField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LNameField2ActionPerformed(evt);
            }
        });

        FNameField2.setEnabled(false);
        FNameField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FNameField2ActionPerformed(evt);
            }
        });

        MNameField2.setEnabled(false);
        MNameField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MNameField2ActionPerformed(evt);
            }
        });

        SuffixField2.setEnabled(false);
        SuffixField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuffixField2ActionPerformed(evt);
            }
        });

        HNumField2.setEnabled(false);
        HNumField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HNumField2ActionPerformed(evt);
            }
        });

        StreetField2.setEnabled(false);
        StreetField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StreetField2ActionPerformed(evt);
            }
        });

        BarangayField2.setEnabled(false);
        BarangayField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarangayField2ActionPerformed(evt);
            }
        });

        MunicipalityField2.setEnabled(false);
        MunicipalityField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MunicipalityField2ActionPerformed(evt);
            }
        });

        ProvinceField2.setEnabled(false);
        ProvinceField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProvinceField2ActionPerformed(evt);
            }
        });

        ZipField2.setEnabled(false);
        ZipField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZipField2ActionPerformed(evt);
            }
        });

        VisitorIDField2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        VisitorIDField2.setEnabled(false);
        VisitorIDField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisitorIDField2ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(350, 50));

        SexCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        SexCombo2.setSelectedIndex(-1);
        SexCombo2.setEnabled(false);
        SexCombo2.setPreferredSize(new java.awt.Dimension(330, 30));
        SexCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SexCombo2ActionPerformed(evt);
            }
        });

        StatusCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allowed", "Banned" }));
        StatusCombo2.setSelectedIndex(-1);
        StatusCombo2.setEnabled(false);
        StatusCombo2.setMinimumSize(new java.awt.Dimension(330, 30));
        StatusCombo2.setPreferredSize(new java.awt.Dimension(330, 30));
        StatusCombo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusCombo2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(SexCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(StatusCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SexCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StatusCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout VisitorInfoPanelFixedLayout = new javax.swing.GroupLayout(VisitorInfoPanelFixed);
        VisitorInfoPanelFixed.setLayout(VisitorInfoPanelFixedLayout);
        VisitorInfoPanelFixedLayout.setHorizontalGroup(
            VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VisitorInfoPanelFixedLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VisitorInfoPanelFixedLayout.createSequentialGroup()
                        .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LNameLabel1)
                            .addComponent(MNameLabel1)
                            .addComponent(LNameField2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MNameField2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SexLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FNameLabel1)
                            .addComponent(SuffixLabel1)
                            .addComponent(MunicipalityField2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(StreetField2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VisitorInfoPanelFixedLayout.createSequentialGroup()
                                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StreetLabel1)
                                    .addComponent(MunicipalityLabel1)
                                    .addComponent(ZipLabel1))
                                .addGap(236, 236, 236))
                            .addComponent(ZipField2)
                            .addComponent(StatusLabel1)
                            .addGroup(VisitorInfoPanelFixedLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SuffixField2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                    .addComponent(FNameField2))))
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, VisitorInfoPanelFixedLayout.createSequentialGroup()
                        .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AddressLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BarangayLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HNumLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ProvinceLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(VisitorIDLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FullNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(HNumField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VehicleLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ProvinceField2)
                                .addComponent(BarangayField2, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                            .addComponent(VisitorIDField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VehicleScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        VisitorInfoPanelFixedLayout.setVerticalGroup(
            VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VisitorInfoPanelFixedLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(VisitorIDLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VisitorIDField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(FullNameLabel)
                .addGap(18, 18, 18)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VisitorInfoPanelFixedLayout.createSequentialGroup()
                        .addComponent(FNameLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LNameField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FNameField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(LNameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MNameLabel1)
                    .addComponent(SuffixLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MNameField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SuffixField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusLabel1)
                    .addComponent(SexLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(AddressLabel)
                .addGap(18, 18, 18)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HNumLabel1)
                    .addComponent(StreetLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HNumField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreetField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BarangayLabel1)
                    .addComponent(MunicipalityLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BarangayField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MunicipalityField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProvinceLabel1)
                    .addComponent(ZipLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitorInfoPanelFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProvinceField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ZipField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(VehicleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VehicleScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        VisitorInfoScrollPane.setViewportView(VisitorInfoPanelFixed);

        NewVisitorButton.setVisible(false);
        NewVisitorButton.setBackground(VisitorNameEnter.getBackground());
        NewVisitorButton.setFont(VisitorNameEnter.getFont());
        NewVisitorButton.setForeground(VisitorNameEnter.getForeground());
        NewVisitorButton.setText("+ Create New Visitor");
        NewVisitorButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        NewVisitorButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NewVisitorButton.setPreferredSize(new java.awt.Dimension(200, 50));
        NewVisitorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewVisitorButtonActionPerformed(evt);
            }
        });

        NewVehicleButton.setVisible(false);
        NewVehicleButton.setBackground(VisitorNameEnter.getBackground());
        NewVehicleButton.setFont(VisitorNameEnter.getFont());
        NewVehicleButton.setForeground(VisitorNameEnter.getForeground());
        NewVehicleButton.setText("+ Add New Vehicle");
        NewVehicleButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        NewVehicleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NewVehicleButton.setPreferredSize(new java.awt.Dimension(200, 50));
        NewVehicleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewVehicleButtonActionPerformed(evt);
            }
        });

        NewLogButton.setVisible(false);
        NewLogButton.setBackground(VisitorNameEnter.getBackground());
        NewLogButton.setFont(VisitorNameEnter.getFont());
        NewLogButton.setForeground(VisitorNameEnter.getForeground());
        NewLogButton.setText("+ Add New Log");
        NewLogButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NewLogButton.setPreferredSize(new java.awt.Dimension(200, 50));
        NewLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewLogButtonActionPerformed(evt);
            }
        });

        DateTimePanel.setVisible(false);
        DateTimePanel.setBackground(new java.awt.Color(255, 255, 255));
        DateTimePanel.setPreferredSize(new java.awt.Dimension(450, 150));

        DateTimeInLabel2.setBackground(new java.awt.Color(33, 36, 39));
        DateTimeInLabel2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        DateTimeInLabel2.setForeground(new java.awt.Color(33, 36, 39));
        DateTimeInLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DateTimeInLabel2.setText("Visit Date In");

        DateTimeOutLabel2.setBackground(new java.awt.Color(33, 36, 39));
        DateTimeOutLabel2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        DateTimeOutLabel2.setForeground(new java.awt.Color(33, 36, 39));
        DateTimeOutLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DateTimeOutLabel2.setText("Visit Date Out");

        DateInLabel3.setBackground(new java.awt.Color(33, 36, 39));
        DateInLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        DateInLabel3.setForeground(new java.awt.Color(33, 36, 39));
        DateInLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DateInLabel3.setText("TextHere");

        DateOutLabel3.setBackground(new java.awt.Color(33, 36, 39));
        DateOutLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        DateOutLabel3.setForeground(new java.awt.Color(33, 36, 39));
        DateOutLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DateOutLabel3.setText("TextHere");

        TimeInLabel3.setBackground(new java.awt.Color(33, 36, 39));
        TimeInLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        TimeInLabel3.setForeground(new java.awt.Color(33, 36, 39));
        TimeInLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeInLabel3.setText("TextHere");

        TimeOutLabel3.setBackground(new java.awt.Color(33, 36, 39));
        TimeOutLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        TimeOutLabel3.setForeground(new java.awt.Color(33, 36, 39));
        TimeOutLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeOutLabel3.setText("TextHere");

        javax.swing.GroupLayout DateTimePanelLayout = new javax.swing.GroupLayout(DateTimePanel);
        DateTimePanel.setLayout(DateTimePanelLayout);
        DateTimePanelLayout.setHorizontalGroup(
            DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DateTimePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DateInLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DateTimeInLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(TimeInLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DateOutLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DateTimeOutLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(TimeOutLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DateTimePanelLayout.setVerticalGroup(
            DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DateTimePanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateTimeInLabel2)
                    .addComponent(DateTimeOutLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateOutLabel3)
                    .addComponent(DateInLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DateTimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TimeInLabel3)
                    .addComponent(TimeOutLabel3))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        addBL.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        addBL.setForeground(new java.awt.Color(133, 133, 133));
        addBL.setText("Enter visitor name to check recorded visitor information");

        EditVisitorButton.setVisible(false);
        EditVisitorButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditVisitorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/edit.png"))); // NOI18N
        EditVisitorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditVisitorButtonActionPerformed(evt);
            }
        });

        CancelEditButton.setVisible(false);
        CancelEditButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CancelEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/cancel.png"))); // NOI18N
        CancelEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelEditButtonActionPerformed(evt);
            }
        });

        ConfirmEditButton.setVisible(false);
        ConfirmEditButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConfirmEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/confirm.png"))); // NOI18N
        ConfirmEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmEditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ConfirmEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditVisitorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(LNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MNameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SNameField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FNameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VisitorNameEnter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DateTimePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(VisitorInfoScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(NewVisitorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NewVehicleButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(NewLogButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(VNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBL))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditVisitorButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CancelEditButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConfirmEditButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VisitorInfoScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NewVehicleButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NewLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NewVisitorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(VisitorNameEnter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DateTimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void LNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LNameFieldActionPerformed

    private void FNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FNameFieldActionPerformed

    private void MNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MNameFieldActionPerformed

    private void SNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SNameFieldActionPerformed

    private void VisitorNameEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisitorNameEnterActionPerformed
        //When the user presses "ENTER" the program will check for an existing Name if not, it will ask to create a new record
        vsNew = -5;
        if (LNameField.getText().isBlank() || FNameField.getText().isBlank()) { //If Last Name or First Name is Empty Pop Up will show
            JOptionPane.showMessageDialog(null, "Please Enter Last Name and First Name", "Invalid Input", JOptionPane.PLAIN_MESSAGE);
        } else if (MNameField.getText().isBlank() && SNameField.getText().isBlank()) { //Last Name and First Name only
            vsNew = vs.setInfo(LNameField.getText(), FNameField.getText());
        } else if (SNameField.getText().isBlank()) { ///Last Name, First Name and Middlle Name only
            vsNew = vs.setInfo(LNameField.getText(), FNameField.getText(), MNameField.getText());
        } else if (MNameField.getText().isBlank()) { //Last Name, First Name and Suffix Name only
            vsNew = vs.setInfo(LNameField.getText(), FNameField.getText(), SNameField.getText());
        } else { // Complete Name with Middle name and Suffix name
            vsNew = vs.setInfo(LNameField.getText(), FNameField.getText(), MNameField.getText(), SNameField.getText());
        }
        switch (vsNew) {
            case 1 -> {
                //Record Detected
                System.out.println(LNameField.getText() + FNameField.getText());
                resetVisitorInfo();
                getVisitorInfo();
                showVehicleTable();
                VisitorInfoScrollPane.setVisible(true);
                NewVehicleButton.setVisible(true);
                NewLogButton.setVisible(true);
                EditVisitorButton.setVisible(true);
                refreshLogs();
                DateTimePanel.setVisible(true);
                vs.display();
            }
            case 0 -> {
                //No Recrod Detected
                String[] op = {"Create New Record", "Return"};
                int res = JOptionPane.showOptionDialog(null, "No Visitor Name Recorded. Would you like to create a new record?", "Visitor Name Not Found", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, op, null);
                // -1 or 1 = Return/Canel, 0 = Create Record, 
                if (res == 0) {
                    JTextField[] vsInf = {LNameField2, FNameField2, MNameField2, SuffixField2, HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
                    JComboBox[] vsBox = {SexCombo2, StatusCombo2};
                    resetVisitorInfo(); //Clears Text Fields
                    VehicleScrollPane.setVisible(false);
                    VisitorInfoScrollPane.setVisible(true);
                    editInfo(vsInf, true);
                    editInfo(vsBox, true);
                    NewVisitorButton.setVisible(true);
                    NewVehicleButton.setVisible(false);
                    NewLogButton.setVisible(false);
                    EditVisitorButton.setVisible(false);
                    CancelEditButton.setVisible(true);
                    VisitorIDField2.setText(Integer.toString(vs.getNextID())); //Inserts new possible ID number
                    LNameField2.setText(LNameField.getText()); //Transfers LastName another TextField
                    FNameField2.setText(FNameField.getText()); //Transfers FirstName another TextField
                    MNameField2.setText(MNameField.getText()); //Transfers MiddleName another TextField
                    SuffixField2.setText(SNameField.getText()); //Transfers Suffix another TextField
                }
            }
            case 2 -> //Error Handling
                JOptionPane.showOptionDialog(null, "There seems to be an Error on the System. Please contact personel to fix this Issue", "Catch Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE, null, null, null);
            case 3 ->  //Name Contains Non-Alphabetic Characters
                JOptionPane.showMessageDialog(null, "Name Contains Non-Alphabetic Characters. Please Check and Try Again", "Invalid Input", JOptionPane.PLAIN_MESSAGE);   
        }
    }//GEN-LAST:event_VisitorNameEnterActionPerformed

    private void LNameField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LNameField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LNameField2ActionPerformed

    private void FNameField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FNameField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FNameField2ActionPerformed

    private void MNameField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MNameField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MNameField2ActionPerformed

    private void SuffixField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuffixField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SuffixField2ActionPerformed

    private void HNumField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HNumField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HNumField2ActionPerformed

    private void StreetField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StreetField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StreetField2ActionPerformed

    private void BarangayField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarangayField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BarangayField2ActionPerformed

    private void MunicipalityField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MunicipalityField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MunicipalityField2ActionPerformed

    private void ProvinceField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProvinceField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProvinceField2ActionPerformed

    private void ZipField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZipField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZipField2ActionPerformed

    private void VisitorIDField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VisitorIDField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VisitorIDField2ActionPerformed

    private void SexCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SexCombo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SexCombo2ActionPerformed

    private void StatusCombo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusCombo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StatusCombo2ActionPerformed

    private void NewLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewLogButtonActionPerformed
        // TODO add your handling code here:
        //Checks if the Visitor is Banned or not before they gets to enter the subdivision
        if ("Banned".equals(vs.getStatus())) {
            JOptionPane.showMessageDialog(null, "Visitor appears to be Banned at this Subdivision.", "Banned Visitor Detected", JOptionPane.WARNING_MESSAGE);
        } else { //Records a New or Existing Log depending whether the Visitor is going in or out of the subdivision
            if ((DateInLabel3.getText().isEmpty() && DateOutLabel3.getText().isEmpty()) || (!DateInLabel3.getText().isEmpty() && !DateOutLabel3.getText().isEmpty())) { //Going In
                log = new Log(vs.getID(), SecID);
                NewLog newLog = new NewLog(log.getNextID(), vs.getID(), SecID, this);
                newLog.setVisible(true);
            } else { //Going Out
                log.updateDateTime();
                refreshLogs();
            }
        }
    }//GEN-LAST:event_NewLogButtonActionPerformed

    private void NewVehicleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewVehicleButtonActionPerformed
        // TODO add your handling code here:
        //Opens New Vehicle Frame
        NewVehicle newVehicle = new NewVehicle(vs.getID(),this);
        newVehicle.setVisible(true);
    }//GEN-LAST:event_NewVehicleButtonActionPerformed

    private void EditVisitorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditVisitorButtonActionPerformed
        // TODO add your handling code here:
        //Sets Visitor Information as Editable
        JTextField[] vsInf = {LNameField2, FNameField2, MNameField2, SuffixField2, HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
        JComboBox[] vsBox = {SexCombo2, StatusCombo2};
        vsNew = JOptionPane.showOptionDialog(null, "Do you want to proceed to Edit Visitor Information?", "Edit Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
        if (vsNew == 0) {
            ConfirmEditButton.setVisible(true);
            CancelEditButton.setVisible(true);
            EditVisitorButton.setVisible(false);
            VisitorNameEnter.setVisible(false);
            NewVehicleButton.setVisible(false);
            NewLogButton.setVisible(false);
            DateTimePanel.setVisible(false);
            LNameField.setText("");
            FNameField.setText("");
            MNameField.setText("");
            SNameField.setText("");
            editInfo(vsInf, true);
            editInfo(vsBox, true);
        }
    }//GEN-LAST:event_EditVisitorButtonActionPerformed

    private void CancelEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelEditButtonActionPerformed
        // TODO add your handling code here:
        //Cancels Edit Changes to Visitor Information
        JTextField[] vsInf = {LNameField2, FNameField2, MNameField2, SuffixField2, HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
        JComboBox[] vsBox = {SexCombo2, StatusCombo2};
        if (vs.isIDmatch(Integer.parseInt(VisitorIDField2.getText()))) { //Resets Info for Exisiting Records
            resetVisitorInfo();
            getVisitorInfo();
            showVehicleTable();
            EditVisitorButton.setVisible(true);
            VisitorNameEnter.setVisible(true);
            NewVehicleButton.setVisible(true);
            NewLogButton.setVisible(true);
        } else { //Resets Info for Non-Existing Records *Canceled New Visitors
            VisitorInfoScrollPane.setVisible(false);
        }
        ConfirmEditButton.setVisible(false);
        CancelEditButton.setVisible(false);
        NewVisitorButton.setVisible(false);
        editInfo(vsInf, false);
        editInfo(vsBox, false);
    }//GEN-LAST:event_CancelEditButtonActionPerformed

    private void ConfirmEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmEditButtonActionPerformed
        // TODO add your handling code here:
        //Confirms Edit Changes to Visitor Information
        JTextField[] vsInf = {LNameField2, FNameField2, MNameField2, SuffixField2, HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
        JComboBox[] vsBox = {SexCombo2, StatusCombo2};
        String[] options = {"Confirm", "Cancel"};
        //Confirmation PopUp for any Edit Changes
        vsNew = JOptionPane.showOptionDialog(null, "Do you want to proceed to Edit Changes?", "Edit Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, null);
        if (vsNew == 0) { //Confirms Edits
            vs.display();
            if (LNameField2.getText().isBlank()|| FNameField2.getText().isBlank()) { //If the User clears the LastName or First Name a pop-up will appear
                JOptionPane.showMessageDialog(null, "Please Enter Last Name and First Name", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            } else if (vs.isNameMatching(LNameField2.getText(), FNameField2.getText(), MNameField2.getText(), SuffixField2.getText()) ) { //If the User does not change Name
                String SqlStatement1 = "update VISITOR set HouseNum = ?, Street = ?, Barangay = ?, MunicipalityCity = ?, Province = ?, ZipCode = ?, Sex = ?, VisitorStatus = ? where VisitorID = ?";
                JTextField[] vsInfAlt = {HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
                try { //Opens Database
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost\\NETBEANSCONNECT:1433;databaseName=VisitorMS;encrypt=true;trustServerCertificate=true", "sa", "BSIT2AG1");
                    PreparedStatement pst = conn.prepareStatement(SqlStatement1);
                    for (int i = 0; i < vsInfAlt.length; i++) {
                        String chk = vsInfAlt[i].getText();
                        if (chk.isBlank()) {
                            chk = null;
                        }
                        pst.setString(i + 1, chk);
                    }
                    switch (SexCombo2.getSelectedIndex()) {
                        case 0 ->
                            pst.setString(7, "M");
                        case 1 ->
                            pst.setString(7, "F");
                        default ->
                            pst.setString(7, null);
                    }
                    switch (StatusCombo2.getSelectedIndex()) {
                        case 0 ->
                            pst.setString(8, "Allowed");
                        case 1 ->
                            pst.setString(8, "Banned");
                    }
                    pst.setString(9, VisitorIDField2.getText());
                    pst.executeUpdate();
                    System.out.println("Exceuted Update");
                    conn.close();
                    System.out.println("Connection Closed");
                } catch (ClassNotFoundException | SQLException e) {
                    System.out.println("Error IN LINE 1148");
                }
                EditVisitorButton.setVisible(true);
                ConfirmEditButton.setVisible(false);
                CancelEditButton.setVisible(false);
                VisitorNameEnter.setVisible(true);
                NewVehicleButton.setVisible(true);
                NewLogButton.setVisible(true);
                editInfo(vsInf, false);
                editInfo(vsBox, false);
                vs.setInfo(Integer.parseInt(VisitorIDField2.getText()));
            } else if (vs.isNameMatching(LNameField2.getText(), FNameField2.getText(), MNameField2.getText(), SuffixField2.getText()) ) { //If the User does not change Name
                String SqlStatement1 = "update VISITOR set HouseNum = ?, Street = ?, Barangay = ?, MunicipalityCity = ?, Province = ?, ZipCode = ?, Sex = ?, VisitorStatus = ? where VisitorID = ?";
                JTextField[] vsInfAlt = {HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
                try { //Opens Database
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost\\NETBEANSCONNECT:1433;databaseName=VisitorMS;encrypt=true;trustServerCertificate=true", "sa", "BSIT2AG1");
                    PreparedStatement pst = conn.prepareStatement(SqlStatement1);
                    for (int i = 0; i < vsInfAlt.length; i++) {
                        String chk = vsInfAlt[i].getText();
                        if (chk.isBlank()) {
                            chk = null;
                        }
                        pst.setString(i + 1, chk);
                    }
                    switch (SexCombo2.getSelectedIndex()) {
                        case 0 ->
                            pst.setString(7, "M");
                        case 1 ->
                            pst.setString(7, "F");
                        default ->
                            pst.setString(7, null);
                    }
                    switch (StatusCombo2.getSelectedIndex()) {
                        case 0 ->
                            pst.setString(8, "Allowed");
                        case 1 ->
                            pst.setString(8, "Banned");
                    }
                    pst.setString(9, VisitorIDField2.getText());
                    pst.executeUpdate();
                    System.out.println("Exceuted Update");
                    conn.close();
                    System.out.println("Connection Closed");
                } catch (ClassNotFoundException | SQLException e) {
                    System.out.println("Error IN LINE 1148");
                }
                EditVisitorButton.setVisible(true);
                ConfirmEditButton.setVisible(false);
                CancelEditButton.setVisible(false);
                VisitorNameEnter.setVisible(true);
                NewVehicleButton.setVisible(true);
                NewLogButton.setVisible(true);
                editInfo(vsInf, false);
                editInfo(vsBox, false);
                vs.setInfo(Integer.parseInt(VisitorIDField2.getText()));
            }else { //If the User Changes Name, It Checks if the name is pre-Existing
                if (MNameField2.getText().isBlank()&& SuffixField2.getText().isBlank()) {
                    vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText());
                } else if (SuffixField2.getText().isBlank()) {
                    vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText(), MNameField2.getText());
                } else if (MNameField2.getText().isBlank()) {
                    vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText(), SuffixField2.getText());
                } else {
                    vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText(), MNameField2.getText(), SuffixField2.getText());
                }
                switch (vsNew) { // 1 = Name already Exist, 2 = Error , 0 = Valid Name , 3 = Name Contains Non Alphabetic Characters
                    case 1 ->
                        JOptionPane.showMessageDialog(null, "Name appears to be already in the System. Please Change the Name or Cancel Changes", "Duplicate Record Detected", JOptionPane.ERROR_MESSAGE);
                    case 2 ->
                        JOptionPane.showMessageDialog(null, "Please check Console for Debuging", "Error!?", JOptionPane.ERROR_MESSAGE);
                    case 3 ->
                        JOptionPane.showMessageDialog(null, "Name Contains Non-Alphabetic Characters. Please Check and Try Again", "Invalid Input", JOptionPane.PLAIN_MESSAGE);   
                    case 0 -> {
                        String SqlStatement2 = "update VISITOR set LastName = ?, FirstName =?, MiddleName = ?, Suffix = ?, HouseNum = ?, Street = ?, Barangay = ?, MunicipalityCity = ?, Province = ?, ZipCode = ?, Sex = ?, VisitorStatus = ? where VisitorID = ?";
                        try { //Opens Database
                            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                            Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost\\NETBEANSCONNECT:1433;databaseName=VisitorMS;encrypt=true;trustServerCertificate=true", "sa", "BSIT2AG1");
                            PreparedStatement pst = conn.prepareStatement(SqlStatement2);
                            for (int i = 0; i < vsInf.length; i++) {
                                String chk = vsInf[i].getText();
                                if (chk.isEmpty()) {
                                    chk = null;
                                }
                                pst.setString(i + 1, chk);
                            }
                            switch (SexCombo2.getSelectedIndex()) {
                                case 0 ->
                                    pst.setString(11, "M");
                                case 1 ->
                                    pst.setString(11, "F");
                                default ->
                                    pst.setString(11, null);
                            }
                            switch (StatusCombo2.getSelectedIndex()) {
                                case 0 ->
                                    pst.setString(12, "Allowed");
                                case 1 ->
                                    pst.setString(12, "Banned");
                            }
                            pst.setString(13, VisitorIDField2.getText());
                            pst.executeUpdate();
                            conn.close();
                            vs.setInfo(Integer.parseInt(VisitorIDField2.getText()));
                        } catch (ClassNotFoundException | SQLException e) {
                            System.out.println("Error IN LINE 2203");
                        }
                        EditVisitorButton.setVisible(true);
                        ConfirmEditButton.setVisible(false);
                        CancelEditButton.setVisible(false);
                        VisitorNameEnter.setVisible(true);
                        NewVehicleButton.setVisible(true);
                        NewLogButton.setVisible(true);
                        editInfo(vsInf, false);
                        editInfo(vsBox, false);
                    }
                }
            }
        } else if (vsNew == 1 || vsNew == -1) { //Resets/Cancels Changes
            resetVisitorInfo();
            getVisitorInfo();
            showVehicleTable();
            EditVisitorButton.setVisible(true);
            ConfirmEditButton.setVisible(false);
            CancelEditButton.setVisible(false);
            VisitorNameEnter.setVisible(true);
            NewVehicleButton.setVisible(true);
            NewLogButton.setVisible(true);

            editInfo(vsInf, false);
            editInfo(vsBox, false);
        }
    }//GEN-LAST:event_ConfirmEditButtonActionPerformed

    private void NewVisitorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewVisitorButtonActionPerformed
        // TODO add your handling code here:
        //Confirms for New Visitor Record
        JTextField[] vsInf = {LNameField2, FNameField2, MNameField2, SuffixField2, HNumField2, StreetField2, BarangayField2, MunicipalityField2, ProvinceField2, ZipField2};
        JComboBox[] vsBox = {SexCombo2, StatusCombo2};
        //Checks if Name is already Existing
        if (MNameField2.getText().isEmpty() && SuffixField2.getText().isEmpty()) {
            vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText());
        } else if (SuffixField2.getText().isEmpty()) {
            vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText(), MNameField2.getText());
        } else if (MNameField2.getText().isEmpty()) {
            vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText(), SuffixField2.getText());
        } else {
            vsNew = vs.checkName(LNameField2.getText(), FNameField2.getText(), MNameField2.getText(), SuffixField2.getText());
        }
        switch (vsNew) { // 1 = Name already Exist, 2 = Error , 0 = Valid Name, 3 = Name contains Non-Alphabetic Characters
            case 1 ->
                JOptionPane.showMessageDialog(null, "Name appears to be already in the System. Please Change the Name or Cancel Changes", "Duplicate Record Detected", JOptionPane.ERROR_MESSAGE);
            case 2 ->
                JOptionPane.showMessageDialog(null, "Please check Console for Debuging", "Error!?", JOptionPane.ERROR_MESSAGE);
            case 0 -> {
                String SqlStatement3 = "insert into VISITOR values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                try { //Opens Database
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection conn = DriverManager.getConnection("jdbc:sqlserver://localhost\\NETBEANSCONNECT:1433;databaseName=VisitorMS;encrypt=true;trustServerCertificate=true", "sa", "BSIT2AG1");
                    System.out.println("Connection Open");
                    PreparedStatement pst = conn.prepareStatement(SqlStatement3);
                    for (int i = 0; i < vsInf.length; i++) {
                        String chk = vsInf[i].getText();
                        if (chk.isEmpty()) {
                            chk = null;
                        }
                        if (i < 4) {
                            pst.setString(i + 2, chk);
                        } else {
                            pst.setString(i + 3, chk);
                        }
                    }
                    switch (SexCombo2.getSelectedIndex()) {
                        case 0 ->
                            pst.setString(6, "M");
                        case 1 ->
                            pst.setString(6, "F");
                        default ->
                            pst.setString(6, null);
                    }
                    switch (StatusCombo2.getSelectedIndex()) {
                        case 0 ->
                            pst.setString(13, "Allowed");
                        case 1 ->
                            pst.setString(13, "Banned");
                        default ->
                            pst.setString(13, "Allowed");
                    }
                    pst.setString(1, VisitorIDField2.getText());
                    pst.executeUpdate();
                    conn.close();
                    vs.setInfo(Integer.parseInt(VisitorIDField2.getText()));
                } catch (ClassNotFoundException | SQLException e) {
                    System.out.println("Error In Line 1291");
                }
                NewVisitorButton.setVisible(false);
                CancelEditButton.setVisible(false);
                VisitorNameEnter.setVisible(true);
                NewVehicleButton.setVisible(true);
                NewLogButton.setVisible(true);
                EditVisitorButton.setVisible(true);
                editInfo(vsInf, false);
                editInfo(vsBox, false);
            }
            case 3 ->
                JOptionPane.showMessageDialog(null, "Name Contains Non-Alphabetic Characters. Please Check and Try Again", "Invalid Input", JOptionPane.PLAIN_MESSAGE);   
        }
    }//GEN-LAST:event_NewVisitorButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JTextField BarangayField2;
    private javax.swing.JLabel BarangayLabel1;
    private pack1.ActionButtonAddBL CancelEditButton;
    private pack1.ActionButtonAddBL ConfirmEditButton;
    private javax.swing.JLabel DateInLabel3;
    private javax.swing.JLabel DateOutLabel3;
    private javax.swing.JLabel DateTimeInLabel2;
    private javax.swing.JLabel DateTimeOutLabel2;
    private javax.swing.JPanel DateTimePanel;
    private pack1.ActionButtonAddBL EditVisitorButton;
    private javax.swing.JTextField FNameField;
    private javax.swing.JTextField FNameField2;
    private javax.swing.JLabel FNameLabel;
    private javax.swing.JLabel FNameLabel1;
    private javax.swing.JLabel FullNameLabel;
    private javax.swing.JTextField HNumField2;
    private javax.swing.JLabel HNumLabel1;
    private javax.swing.JTextField LNameField;
    private javax.swing.JTextField LNameField2;
    private javax.swing.JLabel LNameLabel;
    private javax.swing.JLabel LNameLabel1;
    private javax.swing.JTextField MNameField;
    private javax.swing.JTextField MNameField2;
    private javax.swing.JLabel MNameLabel;
    private javax.swing.JLabel MNameLabel1;
    private javax.swing.JTextField MunicipalityField2;
    private javax.swing.JLabel MunicipalityLabel1;
    private javax.swing.JButton NewLogButton;
    private javax.swing.JButton NewVehicleButton;
    private javax.swing.JButton NewVisitorButton;
    private javax.swing.JTextField ProvinceField2;
    private javax.swing.JLabel ProvinceLabel1;
    private javax.swing.JTextField SNameField;
    private javax.swing.JLabel SNameLabel;
    private javax.swing.JComboBox<String> SexCombo2;
    private javax.swing.JLabel SexLabel1;
    private javax.swing.JComboBox<String> StatusCombo2;
    private javax.swing.JLabel StatusLabel1;
    private javax.swing.JTextField StreetField2;
    private javax.swing.JLabel StreetLabel1;
    private javax.swing.JTextField SuffixField2;
    private javax.swing.JLabel SuffixLabel1;
    private javax.swing.JLabel TimeInLabel3;
    private javax.swing.JLabel TimeOutLabel3;
    private javax.swing.JLabel VNameLabel;
    private javax.swing.JLabel VehicleLabel;
    private javax.swing.JScrollPane VehicleScrollPane;
    private javax.swing.JTable VehicleTable;
    private javax.swing.JTextField VisitorIDField2;
    private javax.swing.JLabel VisitorIDLabel1;
    private javax.swing.JPanel VisitorInfoPanelFixed;
    private javax.swing.JScrollPane VisitorInfoScrollPane;
    private javax.swing.JButton VisitorNameEnter;
    private javax.swing.JTextField ZipField2;
    private javax.swing.JLabel ZipLabel1;
    private javax.swing.JLabel addBL;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
